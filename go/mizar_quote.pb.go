// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: mizar_quote.proto

package mizar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 報價類型
type QuoteType int32

const (
	QuoteType_QUOTE_TYPE_UNSPECIFIED QuoteType = 0 // 未指定
	QuoteType_QUOTE_TYPE_TICK        QuoteType = 1 // 逐筆資料
	QuoteType_QUOTE_TYPE_BIDASK      QuoteType = 2 // 買賣價量
	QuoteType_QUOTE_TYPE_QUOTE       QuoteType = 3 // 整股報價
)

// Enum value maps for QuoteType.
var (
	QuoteType_name = map[int32]string{
		0: "QUOTE_TYPE_UNSPECIFIED",
		1: "QUOTE_TYPE_TICK",
		2: "QUOTE_TYPE_BIDASK",
		3: "QUOTE_TYPE_QUOTE",
	}
	QuoteType_value = map[string]int32{
		"QUOTE_TYPE_UNSPECIFIED": 0,
		"QUOTE_TYPE_TICK":        1,
		"QUOTE_TYPE_BIDASK":      2,
		"QUOTE_TYPE_QUOTE":       3,
	}
)

func (x QuoteType) Enum() *QuoteType {
	p := new(QuoteType)
	*p = x
	return p
}

func (x QuoteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuoteType) Descriptor() protoreflect.EnumDescriptor {
	return file_mizar_quote_proto_enumTypes[0].Descriptor()
}

func (QuoteType) Type() protoreflect.EnumType {
	return &file_mizar_quote_proto_enumTypes[0]
}

func (x QuoteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuoteType.Descriptor instead.
func (QuoteType) EnumDescriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{0}
}

// TICK 資料陣列格式
type TickDataList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamps    []int64                `protobuf:"varint,1,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`                       // 納秒時間戳陣列
	ClosePrices   []float64              `protobuf:"fixed64,2,rep,packed,name=close_prices,json=closePrices,proto3" json:"close_prices,omitempty"` // 成交價陣列
	Volumes       []int32                `protobuf:"varint,3,rep,packed,name=volumes,proto3" json:"volumes,omitempty"`                             // 成交量陣列
	BidPrices     []float64              `protobuf:"fixed64,4,rep,packed,name=bid_prices,json=bidPrices,proto3" json:"bid_prices,omitempty"`       // 買價陣列
	BidVolumes    []int32                `protobuf:"varint,5,rep,packed,name=bid_volumes,json=bidVolumes,proto3" json:"bid_volumes,omitempty"`     // 買量陣列
	AskPrices     []float64              `protobuf:"fixed64,6,rep,packed,name=ask_prices,json=askPrices,proto3" json:"ask_prices,omitempty"`       // 賣價陣列
	AskVolumes    []int32                `protobuf:"varint,7,rep,packed,name=ask_volumes,json=askVolumes,proto3" json:"ask_volumes,omitempty"`     // 賣量陣列
	TickTypes     []int32                `protobuf:"varint,8,rep,packed,name=tick_types,json=tickTypes,proto3" json:"tick_types,omitempty"`        // TICK 類型陣列
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TickDataList) Reset() {
	*x = TickDataList{}
	mi := &file_mizar_quote_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickDataList) ProtoMessage() {}

func (x *TickDataList) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickDataList.ProtoReflect.Descriptor instead.
func (*TickDataList) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{0}
}

func (x *TickDataList) GetTimestamps() []int64 {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *TickDataList) GetClosePrices() []float64 {
	if x != nil {
		return x.ClosePrices
	}
	return nil
}

func (x *TickDataList) GetVolumes() []int32 {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *TickDataList) GetBidPrices() []float64 {
	if x != nil {
		return x.BidPrices
	}
	return nil
}

func (x *TickDataList) GetBidVolumes() []int32 {
	if x != nil {
		return x.BidVolumes
	}
	return nil
}

func (x *TickDataList) GetAskPrices() []float64 {
	if x != nil {
		return x.AskPrices
	}
	return nil
}

func (x *TickDataList) GetAskVolumes() []int32 {
	if x != nil {
		return x.AskVolumes
	}
	return nil
}

func (x *TickDataList) GetTickTypes() []int32 {
	if x != nil {
		return x.TickTypes
	}
	return nil
}

// KBAR 資料陣列格式
type KbarDataList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamps    []int64                `protobuf:"varint,1,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`                       // 納秒時間戳陣列
	OpenPrices    []float64              `protobuf:"fixed64,2,rep,packed,name=open_prices,json=openPrices,proto3" json:"open_prices,omitempty"`    // 開盤價陣列
	HighPrices    []float64              `protobuf:"fixed64,3,rep,packed,name=high_prices,json=highPrices,proto3" json:"high_prices,omitempty"`    // 最高價陣列
	LowPrices     []float64              `protobuf:"fixed64,4,rep,packed,name=low_prices,json=lowPrices,proto3" json:"low_prices,omitempty"`       // 最低價陣列
	ClosePrices   []float64              `protobuf:"fixed64,5,rep,packed,name=close_prices,json=closePrices,proto3" json:"close_prices,omitempty"` // 收盤價陣列
	Volumes       []int32                `protobuf:"varint,6,rep,packed,name=volumes,proto3" json:"volumes,omitempty"`                             // 成交量陣列
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KbarDataList) Reset() {
	*x = KbarDataList{}
	mi := &file_mizar_quote_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KbarDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KbarDataList) ProtoMessage() {}

func (x *KbarDataList) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KbarDataList.ProtoReflect.Descriptor instead.
func (*KbarDataList) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{1}
}

func (x *KbarDataList) GetTimestamps() []int64 {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *KbarDataList) GetOpenPrices() []float64 {
	if x != nil {
		return x.OpenPrices
	}
	return nil
}

func (x *KbarDataList) GetHighPrices() []float64 {
	if x != nil {
		return x.HighPrices
	}
	return nil
}

func (x *KbarDataList) GetLowPrices() []float64 {
	if x != nil {
		return x.LowPrices
	}
	return nil
}

func (x *KbarDataList) GetClosePrices() []float64 {
	if x != nil {
		return x.ClosePrices
	}
	return nil
}

func (x *KbarDataList) GetVolumes() []int32 {
	if x != nil {
		return x.Volumes
	}
	return nil
}

// 市場快照資料
type MarketSnapshotData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Timestamp       int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                      // 時間戳
	ContractCode    string                 `protobuf:"bytes,2,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"`             // 合約代碼
	Open            float64                `protobuf:"fixed64,3,opt,name=open,proto3" json:"open,omitempty"`                                               // 開盤價
	High            float64                `protobuf:"fixed64,4,opt,name=high,proto3" json:"high,omitempty"`                                               // 最高價
	Low             float64                `protobuf:"fixed64,5,opt,name=low,proto3" json:"low,omitempty"`                                                 // 最低價
	Close           float64                `protobuf:"fixed64,6,opt,name=close,proto3" json:"close,omitempty"`                                             // 收盤價
	ChangePrice     float64                `protobuf:"fixed64,7,opt,name=change_price,json=changePrice,proto3" json:"change_price,omitempty"`              // 漲跌
	ChangeRate      float64                `protobuf:"fixed64,8,opt,name=change_rate,json=changeRate,proto3" json:"change_rate,omitempty"`                 // 漲跌幅
	AveragePrice    float64                `protobuf:"fixed64,9,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`           // 均價
	Volume          int32                  `protobuf:"varint,10,opt,name=volume,proto3" json:"volume,omitempty"`                                           // 成交量
	TotalVolume     int32                  `protobuf:"varint,11,opt,name=total_volume,json=totalVolume,proto3" json:"total_volume,omitempty"`              // 總成交量
	Amount          int64                  `protobuf:"varint,12,opt,name=amount,proto3" json:"amount,omitempty"`                                           // 成交金額
	TotalAmount     int64                  `protobuf:"varint,13,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`              // 總成交金額
	YesterdayVolume float64                `protobuf:"fixed64,14,opt,name=yesterday_volume,json=yesterdayVolume,proto3" json:"yesterday_volume,omitempty"` // 昨量
	BuyPrice        float64                `protobuf:"fixed64,15,opt,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`                      // 委買價
	BuyVolume       float64                `protobuf:"fixed64,16,opt,name=buy_volume,json=buyVolume,proto3" json:"buy_volume,omitempty"`                   // 委買量
	SellPrice       float64                `protobuf:"fixed64,17,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`                   // 委賣價
	SellVolume      int32                  `protobuf:"varint,18,opt,name=sell_volume,json=sellVolume,proto3" json:"sell_volume,omitempty"`                 // 委賣量
	VolumeRatio     float64                `protobuf:"fixed64,19,opt,name=volume_ratio,json=volumeRatio,proto3" json:"volume_ratio,omitempty"`             // 量比
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MarketSnapshotData) Reset() {
	*x = MarketSnapshotData{}
	mi := &file_mizar_quote_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketSnapshotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketSnapshotData) ProtoMessage() {}

func (x *MarketSnapshotData) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketSnapshotData.ProtoReflect.Descriptor instead.
func (*MarketSnapshotData) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{2}
}

func (x *MarketSnapshotData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MarketSnapshotData) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

func (x *MarketSnapshotData) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *MarketSnapshotData) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *MarketSnapshotData) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *MarketSnapshotData) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *MarketSnapshotData) GetChangePrice() float64 {
	if x != nil {
		return x.ChangePrice
	}
	return 0
}

func (x *MarketSnapshotData) GetChangeRate() float64 {
	if x != nil {
		return x.ChangeRate
	}
	return 0
}

func (x *MarketSnapshotData) GetAveragePrice() float64 {
	if x != nil {
		return x.AveragePrice
	}
	return 0
}

func (x *MarketSnapshotData) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *MarketSnapshotData) GetTotalVolume() int32 {
	if x != nil {
		return x.TotalVolume
	}
	return 0
}

func (x *MarketSnapshotData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MarketSnapshotData) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *MarketSnapshotData) GetYesterdayVolume() float64 {
	if x != nil {
		return x.YesterdayVolume
	}
	return 0
}

func (x *MarketSnapshotData) GetBuyPrice() float64 {
	if x != nil {
		return x.BuyPrice
	}
	return 0
}

func (x *MarketSnapshotData) GetBuyVolume() float64 {
	if x != nil {
		return x.BuyVolume
	}
	return 0
}

func (x *MarketSnapshotData) GetSellPrice() float64 {
	if x != nil {
		return x.SellPrice
	}
	return 0
}

func (x *MarketSnapshotData) GetSellVolume() int32 {
	if x != nil {
		return x.SellVolume
	}
	return 0
}

func (x *MarketSnapshotData) GetVolumeRatio() float64 {
	if x != nil {
		return x.VolumeRatio
	}
	return 0
}

// 或有券源資料
type ShortStockSourceData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContractCode     string                 `protobuf:"bytes,1,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"`                 // 合約代碼
	ShortStockSource float64                `protobuf:"fixed64,2,opt,name=short_stock_source,json=shortStockSource,proto3" json:"short_stock_source,omitempty"` // 或有券源數量
	Timestamp        int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                          // 時間戳
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ShortStockSourceData) Reset() {
	*x = ShortStockSourceData{}
	mi := &file_mizar_quote_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortStockSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortStockSourceData) ProtoMessage() {}

func (x *ShortStockSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortStockSourceData.ProtoReflect.Descriptor instead.
func (*ShortStockSourceData) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{3}
}

func (x *ShortStockSourceData) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

func (x *ShortStockSourceData) GetShortStockSource() float64 {
	if x != nil {
		return x.ShortStockSource
	}
	return 0
}

func (x *ShortStockSourceData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 資券餘額資料
type CreditEnquireData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContractCode  string                 `protobuf:"bytes,1,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"` // 合約代碼
	System        string                 `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`                                 // 券商系統（HE/HC/HN/HF）- 含義不明
	MarginUnit    int32                  `protobuf:"varint,3,opt,name=margin_unit,json=marginUnit,proto3" json:"margin_unit,omitempty"`      // 融資餘額
	ShortUnit     int32                  `protobuf:"varint,4,opt,name=short_unit,json=shortUnit,proto3" json:"short_unit,omitempty"`         // 融券餘額
	UpdateTime    int64                  `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`      // 更新時間（納秒時間戳）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditEnquireData) Reset() {
	*x = CreditEnquireData{}
	mi := &file_mizar_quote_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditEnquireData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditEnquireData) ProtoMessage() {}

func (x *CreditEnquireData) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditEnquireData.ProtoReflect.Descriptor instead.
func (*CreditEnquireData) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{4}
}

func (x *CreditEnquireData) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

func (x *CreditEnquireData) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *CreditEnquireData) GetMarginUnit() int32 {
	if x != nil {
		return x.MarginUnit
	}
	return 0
}

func (x *CreditEnquireData) GetShortUnit() int32 {
	if x != nil {
		return x.ShortUnit
	}
	return 0
}

func (x *CreditEnquireData) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 訂閱報價請求
type SubscribeQuoteRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContractCode   string                 `protobuf:"bytes,1,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"`                    // 合約代碼（優先使用）
	ContractSymbol string                 `protobuf:"bytes,2,opt,name=contract_symbol,json=contractSymbol,proto3" json:"contract_symbol,omitempty"`              // 合約符號（未提供CODE時用這個）
	QuoteType      QuoteType              `protobuf:"varint,3,opt,name=quote_type,json=quoteType,proto3,enum=mizar.quote.QuoteType" json:"quote_type,omitempty"` // 報價類型（預設為 TICK）
	IntradayOdd    bool                   `protobuf:"varint,4,opt,name=intraday_odd,json=intradayOdd,proto3" json:"intraday_odd,omitempty"`                      // 是否包含盤中零股（預設為 false）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SubscribeQuoteRequest) Reset() {
	*x = SubscribeQuoteRequest{}
	mi := &file_mizar_quote_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeQuoteRequest) ProtoMessage() {}

func (x *SubscribeQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeQuoteRequest.ProtoReflect.Descriptor instead.
func (*SubscribeQuoteRequest) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeQuoteRequest) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

func (x *SubscribeQuoteRequest) GetContractSymbol() string {
	if x != nil {
		return x.ContractSymbol
	}
	return ""
}

func (x *SubscribeQuoteRequest) GetQuoteType() QuoteType {
	if x != nil {
		return x.QuoteType
	}
	return QuoteType_QUOTE_TYPE_UNSPECIFIED
}

func (x *SubscribeQuoteRequest) GetIntradayOdd() bool {
	if x != nil {
		return x.IntradayOdd
	}
	return false
}

// 訂閱報價回應
type SubscribeQuoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     ErrorCode              `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeQuoteResponse) Reset() {
	*x = SubscribeQuoteResponse{}
	mi := &file_mizar_quote_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeQuoteResponse) ProtoMessage() {}

func (x *SubscribeQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeQuoteResponse.ProtoReflect.Descriptor instead.
func (*SubscribeQuoteResponse) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeQuoteResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *SubscribeQuoteResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 取消訂閱報價請求
type UnsubscribeQuoteRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContractCode   string                 `protobuf:"bytes,1,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"`       // 合約代碼（優先使用）
	ContractSymbol string                 `protobuf:"bytes,2,opt,name=contract_symbol,json=contractSymbol,proto3" json:"contract_symbol,omitempty"` // 合約符號（未提供CODE時用這個）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UnsubscribeQuoteRequest) Reset() {
	*x = UnsubscribeQuoteRequest{}
	mi := &file_mizar_quote_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeQuoteRequest) ProtoMessage() {}

func (x *UnsubscribeQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeQuoteRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeQuoteRequest) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{7}
}

func (x *UnsubscribeQuoteRequest) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

func (x *UnsubscribeQuoteRequest) GetContractSymbol() string {
	if x != nil {
		return x.ContractSymbol
	}
	return ""
}

// 取消訂閱報價回應
type UnsubscribeQuoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     ErrorCode              `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnsubscribeQuoteResponse) Reset() {
	*x = UnsubscribeQuoteResponse{}
	mi := &file_mizar_quote_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnsubscribeQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeQuoteResponse) ProtoMessage() {}

func (x *UnsubscribeQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeQuoteResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeQuoteResponse) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{8}
}

func (x *UnsubscribeQuoteResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *UnsubscribeQuoteResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 取得歷史 TICK 資料請求
type GetHistoryTickRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContractCode   string                 `protobuf:"bytes,1,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"`       // 合約代碼（優先使用）
	ContractSymbol string                 `protobuf:"bytes,2,opt,name=contract_symbol,json=contractSymbol,proto3" json:"contract_symbol,omitempty"` // 合約符號（未提供CODE時用這個）
	Date           string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                                           // 日期（YYYY-MM-DD）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetHistoryTickRequest) Reset() {
	*x = GetHistoryTickRequest{}
	mi := &file_mizar_quote_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryTickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryTickRequest) ProtoMessage() {}

func (x *GetHistoryTickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryTickRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryTickRequest) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{9}
}

func (x *GetHistoryTickRequest) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

func (x *GetHistoryTickRequest) GetContractSymbol() string {
	if x != nil {
		return x.ContractSymbol
	}
	return ""
}

func (x *GetHistoryTickRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// 取得歷史 TICK 資料回應
type GetHistoryTickResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TickData      *TickDataList          `protobuf:"bytes,1,opt,name=tick_data,json=tickData,proto3" json:"tick_data,omitempty"`                                 // TICK 資料陣列
	ErrorCode     ErrorCode              `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoryTickResponse) Reset() {
	*x = GetHistoryTickResponse{}
	mi := &file_mizar_quote_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryTickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryTickResponse) ProtoMessage() {}

func (x *GetHistoryTickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryTickResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryTickResponse) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{10}
}

func (x *GetHistoryTickResponse) GetTickData() *TickDataList {
	if x != nil {
		return x.TickData
	}
	return nil
}

func (x *GetHistoryTickResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *GetHistoryTickResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 取得歷史 KBAR 資料請求
type GetHistoryKbarRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContractCode   string                 `protobuf:"bytes,1,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"`       // 合約代碼（優先使用）
	ContractSymbol string                 `protobuf:"bytes,2,opt,name=contract_symbol,json=contractSymbol,proto3" json:"contract_symbol,omitempty"` // 合約符號（未提供CODE時用這個）
	Date           string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                                           // 日期（YYYY-MM-DD）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetHistoryKbarRequest) Reset() {
	*x = GetHistoryKbarRequest{}
	mi := &file_mizar_quote_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryKbarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryKbarRequest) ProtoMessage() {}

func (x *GetHistoryKbarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryKbarRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryKbarRequest) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{11}
}

func (x *GetHistoryKbarRequest) GetContractCode() string {
	if x != nil {
		return x.ContractCode
	}
	return ""
}

func (x *GetHistoryKbarRequest) GetContractSymbol() string {
	if x != nil {
		return x.ContractSymbol
	}
	return ""
}

func (x *GetHistoryKbarRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// 取得歷史 KBAR 資料回應
type GetHistoryKbarResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KbarData      *KbarDataList          `protobuf:"bytes,1,opt,name=kbar_data,json=kbarData,proto3" json:"kbar_data,omitempty"`                                 // KBAR 資料陣列
	ErrorCode     ErrorCode              `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoryKbarResponse) Reset() {
	*x = GetHistoryKbarResponse{}
	mi := &file_mizar_quote_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryKbarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryKbarResponse) ProtoMessage() {}

func (x *GetHistoryKbarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryKbarResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryKbarResponse) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{12}
}

func (x *GetHistoryKbarResponse) GetKbarData() *KbarDataList {
	if x != nil {
		return x.KbarData
	}
	return nil
}

func (x *GetHistoryKbarResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *GetHistoryKbarResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 取得市場快照請求
type GetMarketSnapshotRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ContractCodes   []string               `protobuf:"bytes,1,rep,name=contract_codes,json=contractCodes,proto3" json:"contract_codes,omitempty"`       // 合約代碼列表（優先使用）
	ContractSymbols []string               `protobuf:"bytes,2,rep,name=contract_symbols,json=contractSymbols,proto3" json:"contract_symbols,omitempty"` // 合約符號列表（未提供CODE時用這個）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMarketSnapshotRequest) Reset() {
	*x = GetMarketSnapshotRequest{}
	mi := &file_mizar_quote_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarketSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketSnapshotRequest) ProtoMessage() {}

func (x *GetMarketSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetMarketSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{13}
}

func (x *GetMarketSnapshotRequest) GetContractCodes() []string {
	if x != nil {
		return x.ContractCodes
	}
	return nil
}

func (x *GetMarketSnapshotRequest) GetContractSymbols() []string {
	if x != nil {
		return x.ContractSymbols
	}
	return nil
}

// 取得市場快照回應
type GetMarketSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshots     []*MarketSnapshotData  `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`                                               // 快照資料列表
	ErrorCode     ErrorCode              `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMarketSnapshotResponse) Reset() {
	*x = GetMarketSnapshotResponse{}
	mi := &file_mizar_quote_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarketSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketSnapshotResponse) ProtoMessage() {}

func (x *GetMarketSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketSnapshotResponse.ProtoReflect.Descriptor instead.
func (*GetMarketSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{14}
}

func (x *GetMarketSnapshotResponse) GetSnapshots() []*MarketSnapshotData {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *GetMarketSnapshotResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *GetMarketSnapshotResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 取得或有券源請求
type GetShortStockSourceRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ContractCodes   []string               `protobuf:"bytes,1,rep,name=contract_codes,json=contractCodes,proto3" json:"contract_codes,omitempty"`       // 合約代碼列表（優先使用）
	ContractSymbols []string               `protobuf:"bytes,2,rep,name=contract_symbols,json=contractSymbols,proto3" json:"contract_symbols,omitempty"` // 合約符號列表（未提供CODE時用這個）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetShortStockSourceRequest) Reset() {
	*x = GetShortStockSourceRequest{}
	mi := &file_mizar_quote_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShortStockSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortStockSourceRequest) ProtoMessage() {}

func (x *GetShortStockSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortStockSourceRequest.ProtoReflect.Descriptor instead.
func (*GetShortStockSourceRequest) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{15}
}

func (x *GetShortStockSourceRequest) GetContractCodes() []string {
	if x != nil {
		return x.ContractCodes
	}
	return nil
}

func (x *GetShortStockSourceRequest) GetContractSymbols() []string {
	if x != nil {
		return x.ContractSymbols
	}
	return nil
}

// 取得或有券源回應
type GetShortStockSourceResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Sources       []*ShortStockSourceData `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`                                                   // 券源資料列表
	ErrorCode     ErrorCode               `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                  `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShortStockSourceResponse) Reset() {
	*x = GetShortStockSourceResponse{}
	mi := &file_mizar_quote_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShortStockSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortStockSourceResponse) ProtoMessage() {}

func (x *GetShortStockSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortStockSourceResponse.ProtoReflect.Descriptor instead.
func (*GetShortStockSourceResponse) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{16}
}

func (x *GetShortStockSourceResponse) GetSources() []*ShortStockSourceData {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *GetShortStockSourceResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *GetShortStockSourceResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 取得資券餘額請求
type GetCreditEnquireRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ContractCodes   []string               `protobuf:"bytes,1,rep,name=contract_codes,json=contractCodes,proto3" json:"contract_codes,omitempty"`       // 合約代碼列表（優先使用）
	ContractSymbols []string               `protobuf:"bytes,2,rep,name=contract_symbols,json=contractSymbols,proto3" json:"contract_symbols,omitempty"` // 合約符號列表（未提供CODE時用這個）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetCreditEnquireRequest) Reset() {
	*x = GetCreditEnquireRequest{}
	mi := &file_mizar_quote_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreditEnquireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditEnquireRequest) ProtoMessage() {}

func (x *GetCreditEnquireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditEnquireRequest.ProtoReflect.Descriptor instead.
func (*GetCreditEnquireRequest) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{17}
}

func (x *GetCreditEnquireRequest) GetContractCodes() []string {
	if x != nil {
		return x.ContractCodes
	}
	return nil
}

func (x *GetCreditEnquireRequest) GetContractSymbols() []string {
	if x != nil {
		return x.ContractSymbols
	}
	return nil
}

// 取得資券餘額回應
type GetCreditEnquireResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreditData    []*CreditEnquireData   `protobuf:"bytes,1,rep,name=credit_data,json=creditData,proto3" json:"credit_data,omitempty"`                           // 資券餘額資料列表
	ErrorCode     ErrorCode              `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCreditEnquireResponse) Reset() {
	*x = GetCreditEnquireResponse{}
	mi := &file_mizar_quote_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreditEnquireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditEnquireResponse) ProtoMessage() {}

func (x *GetCreditEnquireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_quote_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditEnquireResponse.ProtoReflect.Descriptor instead.
func (*GetCreditEnquireResponse) Descriptor() ([]byte, []int) {
	return file_mizar_quote_proto_rawDescGZIP(), []int{18}
}

func (x *GetCreditEnquireResponse) GetCreditData() []*CreditEnquireData {
	if x != nil {
		return x.CreditData
	}
	return nil
}

func (x *GetCreditEnquireResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *GetCreditEnquireResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_mizar_quote_proto protoreflect.FileDescriptor

const file_mizar_quote_proto_rawDesc = "" +
	"\n" +
	"\x11mizar_quote.proto\x12\vmizar.quote\x1a\x12mizar_common.proto\"\x8a\x02\n" +
	"\fTickDataList\x12\x1e\n" +
	"\n" +
	"timestamps\x18\x01 \x03(\x03R\n" +
	"timestamps\x12!\n" +
	"\fclose_prices\x18\x02 \x03(\x01R\vclosePrices\x12\x18\n" +
	"\avolumes\x18\x03 \x03(\x05R\avolumes\x12\x1d\n" +
	"\n" +
	"bid_prices\x18\x04 \x03(\x01R\tbidPrices\x12\x1f\n" +
	"\vbid_volumes\x18\x05 \x03(\x05R\n" +
	"bidVolumes\x12\x1d\n" +
	"\n" +
	"ask_prices\x18\x06 \x03(\x01R\taskPrices\x12\x1f\n" +
	"\vask_volumes\x18\a \x03(\x05R\n" +
	"askVolumes\x12\x1d\n" +
	"\n" +
	"tick_types\x18\b \x03(\x05R\ttickTypes\"\xcc\x01\n" +
	"\fKbarDataList\x12\x1e\n" +
	"\n" +
	"timestamps\x18\x01 \x03(\x03R\n" +
	"timestamps\x12\x1f\n" +
	"\vopen_prices\x18\x02 \x03(\x01R\n" +
	"openPrices\x12\x1f\n" +
	"\vhigh_prices\x18\x03 \x03(\x01R\n" +
	"highPrices\x12\x1d\n" +
	"\n" +
	"low_prices\x18\x04 \x03(\x01R\tlowPrices\x12!\n" +
	"\fclose_prices\x18\x05 \x03(\x01R\vclosePrices\x12\x18\n" +
	"\avolumes\x18\x06 \x03(\x05R\avolumes\"\xd0\x04\n" +
	"\x12MarketSnapshotData\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12#\n" +
	"\rcontract_code\x18\x02 \x01(\tR\fcontractCode\x12\x12\n" +
	"\x04open\x18\x03 \x01(\x01R\x04open\x12\x12\n" +
	"\x04high\x18\x04 \x01(\x01R\x04high\x12\x10\n" +
	"\x03low\x18\x05 \x01(\x01R\x03low\x12\x14\n" +
	"\x05close\x18\x06 \x01(\x01R\x05close\x12!\n" +
	"\fchange_price\x18\a \x01(\x01R\vchangePrice\x12\x1f\n" +
	"\vchange_rate\x18\b \x01(\x01R\n" +
	"changeRate\x12#\n" +
	"\raverage_price\x18\t \x01(\x01R\faveragePrice\x12\x16\n" +
	"\x06volume\x18\n" +
	" \x01(\x05R\x06volume\x12!\n" +
	"\ftotal_volume\x18\v \x01(\x05R\vtotalVolume\x12\x16\n" +
	"\x06amount\x18\f \x01(\x03R\x06amount\x12!\n" +
	"\ftotal_amount\x18\r \x01(\x03R\vtotalAmount\x12)\n" +
	"\x10yesterday_volume\x18\x0e \x01(\x01R\x0fyesterdayVolume\x12\x1b\n" +
	"\tbuy_price\x18\x0f \x01(\x01R\bbuyPrice\x12\x1d\n" +
	"\n" +
	"buy_volume\x18\x10 \x01(\x01R\tbuyVolume\x12\x1d\n" +
	"\n" +
	"sell_price\x18\x11 \x01(\x01R\tsellPrice\x12\x1f\n" +
	"\vsell_volume\x18\x12 \x01(\x05R\n" +
	"sellVolume\x12!\n" +
	"\fvolume_ratio\x18\x13 \x01(\x01R\vvolumeRatio\"\x87\x01\n" +
	"\x14ShortStockSourceData\x12#\n" +
	"\rcontract_code\x18\x01 \x01(\tR\fcontractCode\x12,\n" +
	"\x12short_stock_source\x18\x02 \x01(\x01R\x10shortStockSource\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"\xb1\x01\n" +
	"\x11CreditEnquireData\x12#\n" +
	"\rcontract_code\x18\x01 \x01(\tR\fcontractCode\x12\x16\n" +
	"\x06system\x18\x02 \x01(\tR\x06system\x12\x1f\n" +
	"\vmargin_unit\x18\x03 \x01(\x05R\n" +
	"marginUnit\x12\x1d\n" +
	"\n" +
	"short_unit\x18\x04 \x01(\x05R\tshortUnit\x12\x1f\n" +
	"\vupdate_time\x18\x05 \x01(\x03R\n" +
	"updateTime\"\xbf\x01\n" +
	"\x15SubscribeQuoteRequest\x12#\n" +
	"\rcontract_code\x18\x01 \x01(\tR\fcontractCode\x12'\n" +
	"\x0fcontract_symbol\x18\x02 \x01(\tR\x0econtractSymbol\x125\n" +
	"\n" +
	"quote_type\x18\x03 \x01(\x0e2\x16.mizar.quote.QuoteTypeR\tquoteType\x12!\n" +
	"\fintraday_odd\x18\x04 \x01(\bR\vintradayOdd\"u\n" +
	"\x16SubscribeQuoteResponse\x126\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"g\n" +
	"\x17UnsubscribeQuoteRequest\x12#\n" +
	"\rcontract_code\x18\x01 \x01(\tR\fcontractCode\x12'\n" +
	"\x0fcontract_symbol\x18\x02 \x01(\tR\x0econtractSymbol\"w\n" +
	"\x18UnsubscribeQuoteResponse\x126\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"y\n" +
	"\x15GetHistoryTickRequest\x12#\n" +
	"\rcontract_code\x18\x01 \x01(\tR\fcontractCode\x12'\n" +
	"\x0fcontract_symbol\x18\x02 \x01(\tR\x0econtractSymbol\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\"\xad\x01\n" +
	"\x16GetHistoryTickResponse\x126\n" +
	"\ttick_data\x18\x01 \x01(\v2\x19.mizar.quote.TickDataListR\btickData\x126\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"y\n" +
	"\x15GetHistoryKbarRequest\x12#\n" +
	"\rcontract_code\x18\x01 \x01(\tR\fcontractCode\x12'\n" +
	"\x0fcontract_symbol\x18\x02 \x01(\tR\x0econtractSymbol\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\"\xad\x01\n" +
	"\x16GetHistoryKbarResponse\x126\n" +
	"\tkbar_data\x18\x01 \x01(\v2\x19.mizar.quote.KbarDataListR\bkbarData\x126\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"l\n" +
	"\x18GetMarketSnapshotRequest\x12%\n" +
	"\x0econtract_codes\x18\x01 \x03(\tR\rcontractCodes\x12)\n" +
	"\x10contract_symbols\x18\x02 \x03(\tR\x0fcontractSymbols\"\xb7\x01\n" +
	"\x19GetMarketSnapshotResponse\x12=\n" +
	"\tsnapshots\x18\x01 \x03(\v2\x1f.mizar.quote.MarketSnapshotDataR\tsnapshots\x126\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"n\n" +
	"\x1aGetShortStockSourceRequest\x12%\n" +
	"\x0econtract_codes\x18\x01 \x03(\tR\rcontractCodes\x12)\n" +
	"\x10contract_symbols\x18\x02 \x03(\tR\x0fcontractSymbols\"\xb7\x01\n" +
	"\x1bGetShortStockSourceResponse\x12;\n" +
	"\asources\x18\x01 \x03(\v2!.mizar.quote.ShortStockSourceDataR\asources\x126\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"k\n" +
	"\x17GetCreditEnquireRequest\x12%\n" +
	"\x0econtract_codes\x18\x01 \x03(\tR\rcontractCodes\x12)\n" +
	"\x10contract_symbols\x18\x02 \x03(\tR\x0fcontractSymbols\"\xb8\x01\n" +
	"\x18GetCreditEnquireResponse\x12?\n" +
	"\vcredit_data\x18\x01 \x03(\v2\x1e.mizar.quote.CreditEnquireDataR\n" +
	"creditData\x126\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage*i\n" +
	"\tQuoteType\x12\x1a\n" +
	"\x16QUOTE_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fQUOTE_TYPE_TICK\x10\x01\x12\x15\n" +
	"\x11QUOTE_TYPE_BIDASK\x10\x02\x12\x14\n" +
	"\x10QUOTE_TYPE_QUOTE\x10\x03B*Z(github.com/mizar/mizar-proto/proto/mizarb\x06proto3"

var (
	file_mizar_quote_proto_rawDescOnce sync.Once
	file_mizar_quote_proto_rawDescData []byte
)

func file_mizar_quote_proto_rawDescGZIP() []byte {
	file_mizar_quote_proto_rawDescOnce.Do(func() {
		file_mizar_quote_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mizar_quote_proto_rawDesc), len(file_mizar_quote_proto_rawDesc)))
	})
	return file_mizar_quote_proto_rawDescData
}

var file_mizar_quote_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mizar_quote_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_mizar_quote_proto_goTypes = []any{
	(QuoteType)(0),                      // 0: mizar.quote.QuoteType
	(*TickDataList)(nil),                // 1: mizar.quote.TickDataList
	(*KbarDataList)(nil),                // 2: mizar.quote.KbarDataList
	(*MarketSnapshotData)(nil),          // 3: mizar.quote.MarketSnapshotData
	(*ShortStockSourceData)(nil),        // 4: mizar.quote.ShortStockSourceData
	(*CreditEnquireData)(nil),           // 5: mizar.quote.CreditEnquireData
	(*SubscribeQuoteRequest)(nil),       // 6: mizar.quote.SubscribeQuoteRequest
	(*SubscribeQuoteResponse)(nil),      // 7: mizar.quote.SubscribeQuoteResponse
	(*UnsubscribeQuoteRequest)(nil),     // 8: mizar.quote.UnsubscribeQuoteRequest
	(*UnsubscribeQuoteResponse)(nil),    // 9: mizar.quote.UnsubscribeQuoteResponse
	(*GetHistoryTickRequest)(nil),       // 10: mizar.quote.GetHistoryTickRequest
	(*GetHistoryTickResponse)(nil),      // 11: mizar.quote.GetHistoryTickResponse
	(*GetHistoryKbarRequest)(nil),       // 12: mizar.quote.GetHistoryKbarRequest
	(*GetHistoryKbarResponse)(nil),      // 13: mizar.quote.GetHistoryKbarResponse
	(*GetMarketSnapshotRequest)(nil),    // 14: mizar.quote.GetMarketSnapshotRequest
	(*GetMarketSnapshotResponse)(nil),   // 15: mizar.quote.GetMarketSnapshotResponse
	(*GetShortStockSourceRequest)(nil),  // 16: mizar.quote.GetShortStockSourceRequest
	(*GetShortStockSourceResponse)(nil), // 17: mizar.quote.GetShortStockSourceResponse
	(*GetCreditEnquireRequest)(nil),     // 18: mizar.quote.GetCreditEnquireRequest
	(*GetCreditEnquireResponse)(nil),    // 19: mizar.quote.GetCreditEnquireResponse
	(ErrorCode)(0),                      // 20: mizar.common.ErrorCode
}
var file_mizar_quote_proto_depIdxs = []int32{
	0,  // 0: mizar.quote.SubscribeQuoteRequest.quote_type:type_name -> mizar.quote.QuoteType
	20, // 1: mizar.quote.SubscribeQuoteResponse.error_code:type_name -> mizar.common.ErrorCode
	20, // 2: mizar.quote.UnsubscribeQuoteResponse.error_code:type_name -> mizar.common.ErrorCode
	1,  // 3: mizar.quote.GetHistoryTickResponse.tick_data:type_name -> mizar.quote.TickDataList
	20, // 4: mizar.quote.GetHistoryTickResponse.error_code:type_name -> mizar.common.ErrorCode
	2,  // 5: mizar.quote.GetHistoryKbarResponse.kbar_data:type_name -> mizar.quote.KbarDataList
	20, // 6: mizar.quote.GetHistoryKbarResponse.error_code:type_name -> mizar.common.ErrorCode
	3,  // 7: mizar.quote.GetMarketSnapshotResponse.snapshots:type_name -> mizar.quote.MarketSnapshotData
	20, // 8: mizar.quote.GetMarketSnapshotResponse.error_code:type_name -> mizar.common.ErrorCode
	4,  // 9: mizar.quote.GetShortStockSourceResponse.sources:type_name -> mizar.quote.ShortStockSourceData
	20, // 10: mizar.quote.GetShortStockSourceResponse.error_code:type_name -> mizar.common.ErrorCode
	5,  // 11: mizar.quote.GetCreditEnquireResponse.credit_data:type_name -> mizar.quote.CreditEnquireData
	20, // 12: mizar.quote.GetCreditEnquireResponse.error_code:type_name -> mizar.common.ErrorCode
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_mizar_quote_proto_init() }
func file_mizar_quote_proto_init() {
	if File_mizar_quote_proto != nil {
		return
	}
	file_mizar_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mizar_quote_proto_rawDesc), len(file_mizar_quote_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mizar_quote_proto_goTypes,
		DependencyIndexes: file_mizar_quote_proto_depIdxs,
		EnumInfos:         file_mizar_quote_proto_enumTypes,
		MessageInfos:      file_mizar_quote_proto_msgTypes,
	}.Build()
	File_mizar_quote_proto = out.File
	file_mizar_quote_proto_goTypes = nil
	file_mizar_quote_proto_depIdxs = nil
}
