// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: mizar_info.proto

package mizar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 交易所類型
type Exchange int32

const (
	Exchange_EXCHANGE_UNSPECIFIED Exchange = 0 // 未指定
	Exchange_EXCHANGE_TSE         Exchange = 1 // 台灣證券交易所
	Exchange_EXCHANGE_OTC         Exchange = 2 // 櫃買中心
	Exchange_EXCHANGE_OES         Exchange = 3 // 興櫃
)

// Enum value maps for Exchange.
var (
	Exchange_name = map[int32]string{
		0: "EXCHANGE_UNSPECIFIED",
		1: "EXCHANGE_TSE",
		2: "EXCHANGE_OTC",
		3: "EXCHANGE_OES",
	}
	Exchange_value = map[string]int32{
		"EXCHANGE_UNSPECIFIED": 0,
		"EXCHANGE_TSE":         1,
		"EXCHANGE_OTC":         2,
		"EXCHANGE_OES":         3,
	}
)

func (x Exchange) Enum() *Exchange {
	p := new(Exchange)
	*p = x
	return p
}

func (x Exchange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Exchange) Descriptor() protoreflect.EnumDescriptor {
	return file_mizar_info_proto_enumTypes[0].Descriptor()
}

func (Exchange) Type() protoreflect.EnumType {
	return &file_mizar_info_proto_enumTypes[0]
}

func (x Exchange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Exchange.Descriptor instead.
func (Exchange) EnumDescriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{0}
}

// 當沖類型
type DayTrade int32

const (
	DayTrade_DAY_TRADE_UNSPECIFIED DayTrade = 0 // 未指定
	DayTrade_DAY_TRADE_YES         DayTrade = 1 // 可當沖
	DayTrade_DAY_TRADE_NO          DayTrade = 2 // 不可當沖
	DayTrade_DAY_TRADE_ONLY_BUY    DayTrade = 3 // 僅可買入當沖
)

// Enum value maps for DayTrade.
var (
	DayTrade_name = map[int32]string{
		0: "DAY_TRADE_UNSPECIFIED",
		1: "DAY_TRADE_YES",
		2: "DAY_TRADE_NO",
		3: "DAY_TRADE_ONLY_BUY",
	}
	DayTrade_value = map[string]int32{
		"DAY_TRADE_UNSPECIFIED": 0,
		"DAY_TRADE_YES":         1,
		"DAY_TRADE_NO":          2,
		"DAY_TRADE_ONLY_BUY":    3,
	}
)

func (x DayTrade) Enum() *DayTrade {
	p := new(DayTrade)
	*p = x
	return p
}

func (x DayTrade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DayTrade) Descriptor() protoreflect.EnumDescriptor {
	return file_mizar_info_proto_enumTypes[1].Descriptor()
}

func (DayTrade) Type() protoreflect.EnumType {
	return &file_mizar_info_proto_enumTypes[1]
}

func (x DayTrade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DayTrade.Descriptor instead.
func (DayTrade) EnumDescriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{1}
}

// 選擇權權利類型
type OptionRight int32

const (
	OptionRight_OPTION_RIGHT_UNSPECIFIED OptionRight = 0 // 未指定
	OptionRight_OPTION_RIGHT_CALL        OptionRight = 1 // 買權
	OptionRight_OPTION_RIGHT_PUT         OptionRight = 2 // 賣權
)

// Enum value maps for OptionRight.
var (
	OptionRight_name = map[int32]string{
		0: "OPTION_RIGHT_UNSPECIFIED",
		1: "OPTION_RIGHT_CALL",
		2: "OPTION_RIGHT_PUT",
	}
	OptionRight_value = map[string]int32{
		"OPTION_RIGHT_UNSPECIFIED": 0,
		"OPTION_RIGHT_CALL":        1,
		"OPTION_RIGHT_PUT":         2,
	}
)

func (x OptionRight) Enum() *OptionRight {
	p := new(OptionRight)
	*p = x
	return p
}

func (x OptionRight) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OptionRight) Descriptor() protoreflect.EnumDescriptor {
	return file_mizar_info_proto_enumTypes[2].Descriptor()
}

func (OptionRight) Type() protoreflect.EnumType {
	return &file_mizar_info_proto_enumTypes[2]
}

func (x OptionRight) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OptionRight.Descriptor instead.
func (OptionRight) EnumDescriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{2}
}

// 合約類型
type ContractType int32

const (
	ContractType_CONTRACT_TYPE_UNSPECIFIED ContractType = 0 // 未指定
	ContractType_CONTRACT_TYPE_STOCK       ContractType = 1 // 證券
	ContractType_CONTRACT_TYPE_FUTURE      ContractType = 2 // 期貨
	ContractType_CONTRACT_TYPE_OPTION      ContractType = 3 // 選擇權
	ContractType_CONTRACT_TYPE_INDEX       ContractType = 4 // 指數
)

// Enum value maps for ContractType.
var (
	ContractType_name = map[int32]string{
		0: "CONTRACT_TYPE_UNSPECIFIED",
		1: "CONTRACT_TYPE_STOCK",
		2: "CONTRACT_TYPE_FUTURE",
		3: "CONTRACT_TYPE_OPTION",
		4: "CONTRACT_TYPE_INDEX",
	}
	ContractType_value = map[string]int32{
		"CONTRACT_TYPE_UNSPECIFIED": 0,
		"CONTRACT_TYPE_STOCK":       1,
		"CONTRACT_TYPE_FUTURE":      2,
		"CONTRACT_TYPE_OPTION":      3,
		"CONTRACT_TYPE_INDEX":       4,
	}
)

func (x ContractType) Enum() *ContractType {
	p := new(ContractType)
	*p = x
	return p
}

func (x ContractType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractType) Descriptor() protoreflect.EnumDescriptor {
	return file_mizar_info_proto_enumTypes[3].Descriptor()
}

func (ContractType) Type() protoreflect.EnumType {
	return &file_mizar_info_proto_enumTypes[3]
}

func (x ContractType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractType.Descriptor instead.
func (ContractType) EnumDescriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{3}
}

// 券商連線狀態
type BrokerStatus int32

const (
	BrokerStatus_BROKER_STATUS_UNSPECIFIED BrokerStatus = 0 // 未指定
	BrokerStatus_BROKER_STATUS_UP          BrokerStatus = 1 // 連線正常
	BrokerStatus_BROKER_STATUS_DOWN        BrokerStatus = 2 // 連線異常
)

// Enum value maps for BrokerStatus.
var (
	BrokerStatus_name = map[int32]string{
		0: "BROKER_STATUS_UNSPECIFIED",
		1: "BROKER_STATUS_UP",
		2: "BROKER_STATUS_DOWN",
	}
	BrokerStatus_value = map[string]int32{
		"BROKER_STATUS_UNSPECIFIED": 0,
		"BROKER_STATUS_UP":          1,
		"BROKER_STATUS_DOWN":        2,
	}
)

func (x BrokerStatus) Enum() *BrokerStatus {
	p := new(BrokerStatus)
	*p = x
	return p
}

func (x BrokerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrokerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_mizar_info_proto_enumTypes[4].Descriptor()
}

func (BrokerStatus) Type() protoreflect.EnumType {
	return &file_mizar_info_proto_enumTypes[4]
}

func (x BrokerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrokerStatus.Descriptor instead.
func (BrokerStatus) EnumDescriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{4}
}

// 期貨帳號資訊
type FutureAccount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PersonId      string                 `protobuf:"bytes,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`    // 個人識別碼
	BrokerId      string                 `protobuf:"bytes,2,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`    // 券商識別碼
	AccountId     string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` // 帳號識別碼
	Signed        bool                   `protobuf:"varint,4,opt,name=signed,proto3" json:"signed,omitempty"`                       // 是否已簽署
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`                    // 使用者名稱
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FutureAccount) Reset() {
	*x = FutureAccount{}
	mi := &file_mizar_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FutureAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FutureAccount) ProtoMessage() {}

func (x *FutureAccount) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FutureAccount.ProtoReflect.Descriptor instead.
func (*FutureAccount) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{0}
}

func (x *FutureAccount) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *FutureAccount) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *FutureAccount) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *FutureAccount) GetSigned() bool {
	if x != nil {
		return x.Signed
	}
	return false
}

func (x *FutureAccount) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 證券合約資訊
type Stock struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Exchange             Exchange               `protobuf:"varint,1,opt,name=exchange,proto3,enum=mizar.info.Exchange" json:"exchange,omitempty"`                               // 交易所
	Code                 string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                                                                 // 商品代碼
	Symbol               string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`                                                             // 符號
	Name                 string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                                 // 商品名稱
	Category             string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`                                                         // 類別
	Unit                 int32                  `protobuf:"varint,6,opt,name=unit,proto3" json:"unit,omitempty"`                                                                // 單位
	LimitUp              float64                `protobuf:"fixed64,7,opt,name=limit_up,json=limitUp,proto3" json:"limit_up,omitempty"`                                          // 漲停價
	LimitDown            float64                `protobuf:"fixed64,8,opt,name=limit_down,json=limitDown,proto3" json:"limit_down,omitempty"`                                    // 跌停價
	Reference            float64                `protobuf:"fixed64,9,opt,name=reference,proto3" json:"reference,omitempty"`                                                     // 參考價
	UpdateDate           string                 `protobuf:"bytes,10,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`                                  // 更新日期
	MarginTradingBalance int32                  `protobuf:"varint,11,opt,name=margin_trading_balance,json=marginTradingBalance,proto3" json:"margin_trading_balance,omitempty"` // 融資餘額
	ShortSellingBalance  int32                  `protobuf:"varint,12,opt,name=short_selling_balance,json=shortSellingBalance,proto3" json:"short_selling_balance,omitempty"`    // 融券餘額
	DayTrade             DayTrade               `protobuf:"varint,13,opt,name=day_trade,json=dayTrade,proto3,enum=mizar.info.DayTrade" json:"day_trade,omitempty"`              // 可否當沖
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Stock) Reset() {
	*x = Stock{}
	mi := &file_mizar_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{1}
}

func (x *Stock) GetExchange() Exchange {
	if x != nil {
		return x.Exchange
	}
	return Exchange_EXCHANGE_UNSPECIFIED
}

func (x *Stock) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Stock) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Stock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stock) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Stock) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *Stock) GetLimitUp() float64 {
	if x != nil {
		return x.LimitUp
	}
	return 0
}

func (x *Stock) GetLimitDown() float64 {
	if x != nil {
		return x.LimitDown
	}
	return 0
}

func (x *Stock) GetReference() float64 {
	if x != nil {
		return x.Reference
	}
	return 0
}

func (x *Stock) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

func (x *Stock) GetMarginTradingBalance() int32 {
	if x != nil {
		return x.MarginTradingBalance
	}
	return 0
}

func (x *Stock) GetShortSellingBalance() int32 {
	if x != nil {
		return x.ShortSellingBalance
	}
	return 0
}

func (x *Stock) GetDayTrade() DayTrade {
	if x != nil {
		return x.DayTrade
	}
	return DayTrade_DAY_TRADE_UNSPECIFIED
}

// 期貨合約資訊
type Future struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Code           string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                           // 商品代碼
	Symbol         string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`                                       // 符號
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                           // 商品名稱
	Category       string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`                                   // 類別
	DeliveryMonth  string                 `protobuf:"bytes,5,opt,name=delivery_month,json=deliveryMonth,proto3" json:"delivery_month,omitempty"`    // 交割月份
	DeliveryDate   string                 `protobuf:"bytes,6,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`       // 結算日
	UnderlyingKind string                 `protobuf:"bytes,7,opt,name=underlying_kind,json=underlyingKind,proto3" json:"underlying_kind,omitempty"` // 標的類型
	Unit           int32                  `protobuf:"varint,8,opt,name=unit,proto3" json:"unit,omitempty"`                                          // 單位
	LimitUp        float64                `protobuf:"fixed64,9,opt,name=limit_up,json=limitUp,proto3" json:"limit_up,omitempty"`                    // 漲停價
	LimitDown      float64                `protobuf:"fixed64,10,opt,name=limit_down,json=limitDown,proto3" json:"limit_down,omitempty"`             // 跌停價
	Reference      float64                `protobuf:"fixed64,11,opt,name=reference,proto3" json:"reference,omitempty"`                              // 參考價
	UpdateDate     string                 `protobuf:"bytes,12,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`            // 更新時間
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Future) Reset() {
	*x = Future{}
	mi := &file_mizar_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Future) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Future) ProtoMessage() {}

func (x *Future) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Future.ProtoReflect.Descriptor instead.
func (*Future) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{2}
}

func (x *Future) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Future) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Future) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Future) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Future) GetDeliveryMonth() string {
	if x != nil {
		return x.DeliveryMonth
	}
	return ""
}

func (x *Future) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *Future) GetUnderlyingKind() string {
	if x != nil {
		return x.UnderlyingKind
	}
	return ""
}

func (x *Future) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *Future) GetLimitUp() float64 {
	if x != nil {
		return x.LimitUp
	}
	return 0
}

func (x *Future) GetLimitDown() float64 {
	if x != nil {
		return x.LimitDown
	}
	return 0
}

func (x *Future) GetReference() float64 {
	if x != nil {
		return x.Reference
	}
	return 0
}

func (x *Future) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

// 選擇權合約資訊
type Option struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Code           string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                                               // 商品代碼
	Symbol         string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`                                                           // 符號
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                               // 商品名稱
	Category       string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`                                                       // 類型
	DeliveryMonth  string                 `protobuf:"bytes,5,opt,name=delivery_month,json=deliveryMonth,proto3" json:"delivery_month,omitempty"`                        // 交割月份
	DeliveryDate   string                 `protobuf:"bytes,6,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`                           // 交割日期
	StrikePrice    float64                `protobuf:"fixed64,7,opt,name=strike_price,json=strikePrice,proto3" json:"strike_price,omitempty"`                            // 履約價
	OptionRight    OptionRight            `protobuf:"varint,8,opt,name=option_right,json=optionRight,proto3,enum=mizar.info.OptionRight" json:"option_right,omitempty"` // 買賣權別
	UnderlyingKind string                 `protobuf:"bytes,9,opt,name=underlying_kind,json=underlyingKind,proto3" json:"underlying_kind,omitempty"`                     // 標的類型
	Unit           int32                  `protobuf:"varint,10,opt,name=unit,proto3" json:"unit,omitempty"`                                                             // 單位
	LimitUp        float64                `protobuf:"fixed64,11,opt,name=limit_up,json=limitUp,proto3" json:"limit_up,omitempty"`                                       // 漲停價
	LimitDown      float64                `protobuf:"fixed64,12,opt,name=limit_down,json=limitDown,proto3" json:"limit_down,omitempty"`                                 // 跌停價
	Reference      float64                `protobuf:"fixed64,13,opt,name=reference,proto3" json:"reference,omitempty"`                                                  // 參考價
	UpdateDate     string                 `protobuf:"bytes,14,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`                                // 更新時間
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Option) Reset() {
	*x = Option{}
	mi := &file_mizar_info_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{3}
}

func (x *Option) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Option) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Option) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Option) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Option) GetDeliveryMonth() string {
	if x != nil {
		return x.DeliveryMonth
	}
	return ""
}

func (x *Option) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *Option) GetStrikePrice() float64 {
	if x != nil {
		return x.StrikePrice
	}
	return 0
}

func (x *Option) GetOptionRight() OptionRight {
	if x != nil {
		return x.OptionRight
	}
	return OptionRight_OPTION_RIGHT_UNSPECIFIED
}

func (x *Option) GetUnderlyingKind() string {
	if x != nil {
		return x.UnderlyingKind
	}
	return ""
}

func (x *Option) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *Option) GetLimitUp() float64 {
	if x != nil {
		return x.LimitUp
	}
	return 0
}

func (x *Option) GetLimitDown() float64 {
	if x != nil {
		return x.LimitDown
	}
	return 0
}

func (x *Option) GetReference() float64 {
	if x != nil {
		return x.Reference
	}
	return 0
}

func (x *Option) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

// 指數合約資訊
type Index struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      Exchange               `protobuf:"varint,1,opt,name=exchange,proto3,enum=mizar.info.Exchange" json:"exchange,omitempty"` // 交易所
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                                   // 商品代碼
	Symbol        string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`                               // 符號
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                   // 商品名稱
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Index) Reset() {
	*x = Index{}
	mi := &file_mizar_info_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{4}
}

func (x *Index) GetExchange() Exchange {
	if x != nil {
		return x.Exchange
	}
	return Exchange_EXCHANGE_UNSPECIFIED
}

func (x *Index) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Index) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Index) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 合約資訊集合
type ContractCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stocks        []*Stock               `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`   // 證券合約列表
	Futures       []*Future              `protobuf:"bytes,2,rep,name=futures,proto3" json:"futures,omitempty"` // 期貨合約列表
	Options       []*Option              `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"` // 選擇權合約列表
	Indexes       []*Index               `protobuf:"bytes,4,rep,name=indexes,proto3" json:"indexes,omitempty"` // 指數合約列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContractCollection) Reset() {
	*x = ContractCollection{}
	mi := &file_mizar_info_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContractCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCollection) ProtoMessage() {}

func (x *ContractCollection) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCollection.ProtoReflect.Descriptor instead.
func (*ContractCollection) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{5}
}

func (x *ContractCollection) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

func (x *ContractCollection) GetFutures() []*Future {
	if x != nil {
		return x.Futures
	}
	return nil
}

func (x *ContractCollection) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ContractCollection) GetIndexes() []*Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

// 取得期貨預設帳號請求
type GetFutureAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFutureAccountRequest) Reset() {
	*x = GetFutureAccountRequest{}
	mi := &file_mizar_info_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFutureAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFutureAccountRequest) ProtoMessage() {}

func (x *GetFutureAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFutureAccountRequest.ProtoReflect.Descriptor instead.
func (*GetFutureAccountRequest) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{6}
}

// 取得期貨預設帳號回應
type GetFutureAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       *FutureAccount         `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`                                                   // 期貨帳號資訊
	ErrorCode     ErrorCode              `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFutureAccountResponse) Reset() {
	*x = GetFutureAccountResponse{}
	mi := &file_mizar_info_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFutureAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFutureAccountResponse) ProtoMessage() {}

func (x *GetFutureAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFutureAccountResponse.ProtoReflect.Descriptor instead.
func (*GetFutureAccountResponse) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{7}
}

func (x *GetFutureAccountResponse) GetAccount() *FutureAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *GetFutureAccountResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *GetFutureAccountResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 取得合約資訊請求
type GetContractRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContractType  ContractType           `protobuf:"varint,1,opt,name=contract_type,json=contractType,proto3,enum=mizar.info.ContractType" json:"contract_type,omitempty"` // 合約類型（可選，不指定則取得全部）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContractRequest) Reset() {
	*x = GetContractRequest{}
	mi := &file_mizar_info_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractRequest) ProtoMessage() {}

func (x *GetContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractRequest.ProtoReflect.Descriptor instead.
func (*GetContractRequest) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{8}
}

func (x *GetContractRequest) GetContractType() ContractType {
	if x != nil {
		return x.ContractType
	}
	return ContractType_CONTRACT_TYPE_UNSPECIFIED
}

// 取得合約資訊回應
type GetContractResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contracts     *ContractCollection    `protobuf:"bytes,1,opt,name=contracts,proto3" json:"contracts,omitempty"`                                               // 合約資訊集合
	ErrorCode     ErrorCode              `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=mizar.common.ErrorCode" json:"error_code,omitempty"` // 錯誤代碼（0=成功）
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                     // 錯誤訊息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContractResponse) Reset() {
	*x = GetContractResponse{}
	mi := &file_mizar_info_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractResponse) ProtoMessage() {}

func (x *GetContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractResponse.ProtoReflect.Descriptor instead.
func (*GetContractResponse) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{9}
}

func (x *GetContractResponse) GetContracts() *ContractCollection {
	if x != nil {
		return x.Contracts
	}
	return nil
}

func (x *GetContractResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *GetContractResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 券商健康檢查請求
type BrokerHealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ForceApiCheck bool                   `protobuf:"varint,1,opt,name=force_api_check,json=forceApiCheck,proto3" json:"force_api_check,omitempty"` // 是否強制向 API 查詢資料確認連線（預設 false）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BrokerHealthCheckRequest) Reset() {
	*x = BrokerHealthCheckRequest{}
	mi := &file_mizar_info_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrokerHealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerHealthCheckRequest) ProtoMessage() {}

func (x *BrokerHealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerHealthCheckRequest.ProtoReflect.Descriptor instead.
func (*BrokerHealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{10}
}

func (x *BrokerHealthCheckRequest) GetForceApiCheck() bool {
	if x != nil {
		return x.ForceApiCheck
	}
	return false
}

// 券商健康檢查回應
type BrokerHealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrokerStatus  BrokerStatus           `protobuf:"varint,1,opt,name=broker_status,json=brokerStatus,proto3,enum=mizar.info.BrokerStatus" json:"broker_status,omitempty"` // 券商連線狀態
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BrokerHealthCheckResponse) Reset() {
	*x = BrokerHealthCheckResponse{}
	mi := &file_mizar_info_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrokerHealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerHealthCheckResponse) ProtoMessage() {}

func (x *BrokerHealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mizar_info_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerHealthCheckResponse.ProtoReflect.Descriptor instead.
func (*BrokerHealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_mizar_info_proto_rawDescGZIP(), []int{11}
}

func (x *BrokerHealthCheckResponse) GetBrokerStatus() BrokerStatus {
	if x != nil {
		return x.BrokerStatus
	}
	return BrokerStatus_BROKER_STATUS_UNSPECIFIED
}

var File_mizar_info_proto protoreflect.FileDescriptor

const file_mizar_info_proto_rawDesc = "" +
	"\n" +
	"\x10mizar_info.proto\x12\n" +
	"mizar.info\x1a\x12mizar_common.proto\"\x9c\x01\n" +
	"\rFutureAccount\x12\x1b\n" +
	"\tperson_id\x18\x01 \x01(\tR\bpersonId\x12\x1b\n" +
	"\tbroker_id\x18\x02 \x01(\tR\bbrokerId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12\x16\n" +
	"\x06signed\x18\x04 \x01(\bR\x06signed\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\"\xbf\x03\n" +
	"\x05Stock\x120\n" +
	"\bexchange\x18\x01 \x01(\x0e2\x14.mizar.info.ExchangeR\bexchange\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12\x12\n" +
	"\x04unit\x18\x06 \x01(\x05R\x04unit\x12\x19\n" +
	"\blimit_up\x18\a \x01(\x01R\alimitUp\x12\x1d\n" +
	"\n" +
	"limit_down\x18\b \x01(\x01R\tlimitDown\x12\x1c\n" +
	"\treference\x18\t \x01(\x01R\treference\x12\x1f\n" +
	"\vupdate_date\x18\n" +
	" \x01(\tR\n" +
	"updateDate\x124\n" +
	"\x16margin_trading_balance\x18\v \x01(\x05R\x14marginTradingBalance\x122\n" +
	"\x15short_selling_balance\x18\f \x01(\x05R\x13shortSellingBalance\x121\n" +
	"\tday_trade\x18\r \x01(\x0e2\x14.mizar.info.DayTradeR\bdayTrade\"\xe6\x02\n" +
	"\x06Future\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12%\n" +
	"\x0edelivery_month\x18\x05 \x01(\tR\rdeliveryMonth\x12#\n" +
	"\rdelivery_date\x18\x06 \x01(\tR\fdeliveryDate\x12'\n" +
	"\x0funderlying_kind\x18\a \x01(\tR\x0eunderlyingKind\x12\x12\n" +
	"\x04unit\x18\b \x01(\x05R\x04unit\x12\x19\n" +
	"\blimit_up\x18\t \x01(\x01R\alimitUp\x12\x1d\n" +
	"\n" +
	"limit_down\x18\n" +
	" \x01(\x01R\tlimitDown\x12\x1c\n" +
	"\treference\x18\v \x01(\x01R\treference\x12\x1f\n" +
	"\vupdate_date\x18\f \x01(\tR\n" +
	"updateDate\"\xc5\x03\n" +
	"\x06Option\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12%\n" +
	"\x0edelivery_month\x18\x05 \x01(\tR\rdeliveryMonth\x12#\n" +
	"\rdelivery_date\x18\x06 \x01(\tR\fdeliveryDate\x12!\n" +
	"\fstrike_price\x18\a \x01(\x01R\vstrikePrice\x12:\n" +
	"\foption_right\x18\b \x01(\x0e2\x17.mizar.info.OptionRightR\voptionRight\x12'\n" +
	"\x0funderlying_kind\x18\t \x01(\tR\x0eunderlyingKind\x12\x12\n" +
	"\x04unit\x18\n" +
	" \x01(\x05R\x04unit\x12\x19\n" +
	"\blimit_up\x18\v \x01(\x01R\alimitUp\x12\x1d\n" +
	"\n" +
	"limit_down\x18\f \x01(\x01R\tlimitDown\x12\x1c\n" +
	"\treference\x18\r \x01(\x01R\treference\x12\x1f\n" +
	"\vupdate_date\x18\x0e \x01(\tR\n" +
	"updateDate\"y\n" +
	"\x05Index\x120\n" +
	"\bexchange\x18\x01 \x01(\x0e2\x14.mizar.info.ExchangeR\bexchange\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\xc8\x01\n" +
	"\x12ContractCollection\x12)\n" +
	"\x06stocks\x18\x01 \x03(\v2\x11.mizar.info.StockR\x06stocks\x12,\n" +
	"\afutures\x18\x02 \x03(\v2\x12.mizar.info.FutureR\afutures\x12,\n" +
	"\aoptions\x18\x03 \x03(\v2\x12.mizar.info.OptionR\aoptions\x12+\n" +
	"\aindexes\x18\x04 \x03(\v2\x11.mizar.info.IndexR\aindexes\"\x19\n" +
	"\x17GetFutureAccountRequest\"\xac\x01\n" +
	"\x18GetFutureAccountResponse\x123\n" +
	"\aaccount\x18\x01 \x01(\v2\x19.mizar.info.FutureAccountR\aaccount\x126\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"S\n" +
	"\x12GetContractRequest\x12=\n" +
	"\rcontract_type\x18\x01 \x01(\x0e2\x18.mizar.info.ContractTypeR\fcontractType\"\xb0\x01\n" +
	"\x13GetContractResponse\x12<\n" +
	"\tcontracts\x18\x01 \x01(\v2\x1e.mizar.info.ContractCollectionR\tcontracts\x126\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x0e2\x17.mizar.common.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"B\n" +
	"\x18BrokerHealthCheckRequest\x12&\n" +
	"\x0fforce_api_check\x18\x01 \x01(\bR\rforceApiCheck\"Z\n" +
	"\x19BrokerHealthCheckResponse\x12=\n" +
	"\rbroker_status\x18\x01 \x01(\x0e2\x18.mizar.info.BrokerStatusR\fbrokerStatus*Z\n" +
	"\bExchange\x12\x18\n" +
	"\x14EXCHANGE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fEXCHANGE_TSE\x10\x01\x12\x10\n" +
	"\fEXCHANGE_OTC\x10\x02\x12\x10\n" +
	"\fEXCHANGE_OES\x10\x03*b\n" +
	"\bDayTrade\x12\x19\n" +
	"\x15DAY_TRADE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rDAY_TRADE_YES\x10\x01\x12\x10\n" +
	"\fDAY_TRADE_NO\x10\x02\x12\x16\n" +
	"\x12DAY_TRADE_ONLY_BUY\x10\x03*X\n" +
	"\vOptionRight\x12\x1c\n" +
	"\x18OPTION_RIGHT_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11OPTION_RIGHT_CALL\x10\x01\x12\x14\n" +
	"\x10OPTION_RIGHT_PUT\x10\x02*\x93\x01\n" +
	"\fContractType\x12\x1d\n" +
	"\x19CONTRACT_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13CONTRACT_TYPE_STOCK\x10\x01\x12\x18\n" +
	"\x14CONTRACT_TYPE_FUTURE\x10\x02\x12\x18\n" +
	"\x14CONTRACT_TYPE_OPTION\x10\x03\x12\x17\n" +
	"\x13CONTRACT_TYPE_INDEX\x10\x04*[\n" +
	"\fBrokerStatus\x12\x1d\n" +
	"\x19BROKER_STATUS_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10BROKER_STATUS_UP\x10\x01\x12\x16\n" +
	"\x12BROKER_STATUS_DOWN\x10\x02B*Z(github.com/mizar/mizar-proto/proto/mizarb\x06proto3"

var (
	file_mizar_info_proto_rawDescOnce sync.Once
	file_mizar_info_proto_rawDescData []byte
)

func file_mizar_info_proto_rawDescGZIP() []byte {
	file_mizar_info_proto_rawDescOnce.Do(func() {
		file_mizar_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mizar_info_proto_rawDesc), len(file_mizar_info_proto_rawDesc)))
	})
	return file_mizar_info_proto_rawDescData
}

var file_mizar_info_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_mizar_info_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_mizar_info_proto_goTypes = []any{
	(Exchange)(0),                     // 0: mizar.info.Exchange
	(DayTrade)(0),                     // 1: mizar.info.DayTrade
	(OptionRight)(0),                  // 2: mizar.info.OptionRight
	(ContractType)(0),                 // 3: mizar.info.ContractType
	(BrokerStatus)(0),                 // 4: mizar.info.BrokerStatus
	(*FutureAccount)(nil),             // 5: mizar.info.FutureAccount
	(*Stock)(nil),                     // 6: mizar.info.Stock
	(*Future)(nil),                    // 7: mizar.info.Future
	(*Option)(nil),                    // 8: mizar.info.Option
	(*Index)(nil),                     // 9: mizar.info.Index
	(*ContractCollection)(nil),        // 10: mizar.info.ContractCollection
	(*GetFutureAccountRequest)(nil),   // 11: mizar.info.GetFutureAccountRequest
	(*GetFutureAccountResponse)(nil),  // 12: mizar.info.GetFutureAccountResponse
	(*GetContractRequest)(nil),        // 13: mizar.info.GetContractRequest
	(*GetContractResponse)(nil),       // 14: mizar.info.GetContractResponse
	(*BrokerHealthCheckRequest)(nil),  // 15: mizar.info.BrokerHealthCheckRequest
	(*BrokerHealthCheckResponse)(nil), // 16: mizar.info.BrokerHealthCheckResponse
	(ErrorCode)(0),                    // 17: mizar.common.ErrorCode
}
var file_mizar_info_proto_depIdxs = []int32{
	0,  // 0: mizar.info.Stock.exchange:type_name -> mizar.info.Exchange
	1,  // 1: mizar.info.Stock.day_trade:type_name -> mizar.info.DayTrade
	2,  // 2: mizar.info.Option.option_right:type_name -> mizar.info.OptionRight
	0,  // 3: mizar.info.Index.exchange:type_name -> mizar.info.Exchange
	6,  // 4: mizar.info.ContractCollection.stocks:type_name -> mizar.info.Stock
	7,  // 5: mizar.info.ContractCollection.futures:type_name -> mizar.info.Future
	8,  // 6: mizar.info.ContractCollection.options:type_name -> mizar.info.Option
	9,  // 7: mizar.info.ContractCollection.indexes:type_name -> mizar.info.Index
	5,  // 8: mizar.info.GetFutureAccountResponse.account:type_name -> mizar.info.FutureAccount
	17, // 9: mizar.info.GetFutureAccountResponse.error_code:type_name -> mizar.common.ErrorCode
	3,  // 10: mizar.info.GetContractRequest.contract_type:type_name -> mizar.info.ContractType
	10, // 11: mizar.info.GetContractResponse.contracts:type_name -> mizar.info.ContractCollection
	17, // 12: mizar.info.GetContractResponse.error_code:type_name -> mizar.common.ErrorCode
	4,  // 13: mizar.info.BrokerHealthCheckResponse.broker_status:type_name -> mizar.info.BrokerStatus
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_mizar_info_proto_init() }
func file_mizar_info_proto_init() {
	if File_mizar_info_proto != nil {
		return
	}
	file_mizar_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mizar_info_proto_rawDesc), len(file_mizar_info_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mizar_info_proto_goTypes,
		DependencyIndexes: file_mizar_info_proto_depIdxs,
		EnumInfos:         file_mizar_info_proto_enumTypes,
		MessageInfos:      file_mizar_info_proto_msgTypes,
	}.Build()
	File_mizar_info_proto = out.File
	file_mizar_info_proto_goTypes = nil
	file_mizar_info_proto_depIdxs = nil
}
