"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import mizar_common_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _EventType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    EVENT_TYPE_UNSPECIFIED: _EventType.ValueType  # 0
    """未定義"""
    EVENT_TYPE_UP: _EventType.ValueType  # 1
    """系統上線"""
    EVENT_TYPE_DOWN: _EventType.ValueType  # 2
    """系統下線"""

class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper):
    """=============================================================================
    ENUM 定義區
    =============================================================================

    事件類型
    """

EVENT_TYPE_UNSPECIFIED: EventType.ValueType  # 0
"""未定義"""
EVENT_TYPE_UP: EventType.ValueType  # 1
"""系統上線"""
EVENT_TYPE_DOWN: EventType.ValueType  # 2
"""系統下線"""
global___EventType = EventType

@typing.final
class SystemEvent(google.protobuf.message.Message):
    """=============================================================================
    一般 MESSAGE 定義區
    =============================================================================

    系統事件資料
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENT_TYPE_FIELD_NUMBER: builtins.int
    EVENT_NAME_FIELD_NUMBER: builtins.int
    EVENT_DESCRIPTION_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    event_type: global___EventType.ValueType
    """事件類型（UP/DOWN）"""
    event_name: builtins.str
    """事件名稱"""
    event_description: builtins.str
    """事件說明"""
    timestamp: builtins.int
    """事件發生時間（納秒時間戳）"""
    def __init__(
        self,
        *,
        event_type: global___EventType.ValueType = ...,
        event_name: builtins.str = ...,
        event_description: builtins.str = ...,
        timestamp: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["event_description", b"event_description", "event_name", b"event_name", "event_type", b"event_type", "timestamp", b"timestamp"]) -> None: ...

global___SystemEvent = SystemEvent

@typing.final
class Operation(google.protobuf.message.Message):
    """操作資訊"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OP_TYPE_FIELD_NUMBER: builtins.int
    OP_CODE_FIELD_NUMBER: builtins.int
    OP_MSG_FIELD_NUMBER: builtins.int
    op_type: builtins.str
    """操作類型（New: 新單, Cancel: 刪單, UpdatePrice: 改價, UpdateQty: 改量）"""
    op_code: builtins.str
    """操作結果代碼（00: 成功, others: 失敗）"""
    op_msg: builtins.str
    """錯誤訊息"""
    def __init__(
        self,
        *,
        op_type: builtins.str = ...,
        op_code: builtins.str = ...,
        op_msg: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["op_code", b"op_code", "op_msg", b"op_msg", "op_type", b"op_type"]) -> None: ...

global___Operation = Operation

@typing.final
class FutureOrderReport(google.protobuf.message.Message):
    """=============================================================================
    MQ 使用 MESSAGE 定義區
    =============================================================================

    期貨委託回報資料（完整格式）
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATION_FIELD_NUMBER: builtins.int
    TRADE_FIELD_NUMBER: builtins.int
    @property
    def operation(self) -> global___Operation:
        """操作資訊"""

    @property
    def trade(self) -> mizar_common_pb2.Trade:
        """完整的委託交易資訊"""

    def __init__(
        self,
        *,
        operation: global___Operation | None = ...,
        trade: mizar_common_pb2.Trade | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["operation", b"operation", "trade", b"trade"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["operation", b"operation", "trade", b"trade"]) -> None: ...

global___FutureOrderReport = FutureOrderReport

@typing.final
class FutureDealReport(google.protobuf.message.Message):
    """期貨成交回報資料（完整格式）"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRADE_ID_FIELD_NUMBER: builtins.int
    SEQNO_FIELD_NUMBER: builtins.int
    ORDNO_FIELD_NUMBER: builtins.int
    EXCHANGE_SEQ_FIELD_NUMBER: builtins.int
    BROKER_ID_FIELD_NUMBER: builtins.int
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    SUBACCOUNT_FIELD_NUMBER: builtins.int
    SECURITY_TYPE_FIELD_NUMBER: builtins.int
    DELIVERY_MONTH_FIELD_NUMBER: builtins.int
    STRIKE_PRICE_FIELD_NUMBER: builtins.int
    OPTION_RIGHT_FIELD_NUMBER: builtins.int
    MARKET_TYPE_FIELD_NUMBER: builtins.int
    COMBO_FIELD_NUMBER: builtins.int
    TS_FIELD_NUMBER: builtins.int
    trade_id: builtins.str
    """與委託回報id相同"""
    seqno: builtins.str
    """平台單號"""
    ordno: builtins.str
    """委託單號（前五碼為同委託回報委託單號，後三碼為同筆委託成交交易序號）"""
    exchange_seq: builtins.str
    """回報序號"""
    broker_id: builtins.str
    """分行代碼"""
    account_id: builtins.str
    """帳號"""
    action: builtins.str
    """買賣別"""
    code: builtins.str
    """商品代碼"""
    price: builtins.float
    """成交價"""
    quantity: builtins.int
    """成交量"""
    subaccount: builtins.str
    """子帳號"""
    security_type: builtins.str
    """商品類別"""
    delivery_month: builtins.str
    """交割月份"""
    strike_price: builtins.float
    """履約價"""
    option_right: builtins.str
    """期權權利（Future, OptionCall, OptionPut）"""
    market_type: builtins.str
    """市場別（Day, Night）"""
    combo: builtins.bool
    """是否為組合單"""
    ts: builtins.int
    """成交時間戳（納秒）"""
    def __init__(
        self,
        *,
        trade_id: builtins.str = ...,
        seqno: builtins.str = ...,
        ordno: builtins.str = ...,
        exchange_seq: builtins.str = ...,
        broker_id: builtins.str = ...,
        account_id: builtins.str = ...,
        action: builtins.str = ...,
        code: builtins.str = ...,
        price: builtins.float = ...,
        quantity: builtins.int = ...,
        subaccount: builtins.str = ...,
        security_type: builtins.str = ...,
        delivery_month: builtins.str = ...,
        strike_price: builtins.float = ...,
        option_right: builtins.str = ...,
        market_type: builtins.str = ...,
        combo: builtins.bool = ...,
        ts: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "action", b"action", "broker_id", b"broker_id", "code", b"code", "combo", b"combo", "delivery_month", b"delivery_month", "exchange_seq", b"exchange_seq", "market_type", b"market_type", "option_right", b"option_right", "ordno", b"ordno", "price", b"price", "quantity", b"quantity", "security_type", b"security_type", "seqno", b"seqno", "strike_price", b"strike_price", "subaccount", b"subaccount", "trade_id", b"trade_id", "ts", b"ts"]) -> None: ...

global___FutureDealReport = FutureDealReport

@typing.final
class StockTick(google.protobuf.message.Message):
    """股票 TICK 資料"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    SYMBOL_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    VOLUME_FIELD_NUMBER: builtins.int
    BID_PRICE_FIELD_NUMBER: builtins.int
    BID_VOLUME_FIELD_NUMBER: builtins.int
    ASK_PRICE_FIELD_NUMBER: builtins.int
    ASK_VOLUME_FIELD_NUMBER: builtins.int
    OPEN_PRICE_FIELD_NUMBER: builtins.int
    HIGH_PRICE_FIELD_NUMBER: builtins.int
    LOW_PRICE_FIELD_NUMBER: builtins.int
    CLOSE_PRICE_FIELD_NUMBER: builtins.int
    TOTAL_VOLUME_FIELD_NUMBER: builtins.int
    TOTAL_AMOUNT_FIELD_NUMBER: builtins.int
    TICK_COUNT_FIELD_NUMBER: builtins.int
    code: builtins.str
    """商品代碼（如：2330）"""
    symbol: builtins.str
    """商品符號（如：2330）"""
    timestamp: builtins.int
    """TICK 時間戳（納秒）"""
    price: builtins.float
    """成交價"""
    volume: builtins.int
    """成交量"""
    bid_price: builtins.float
    """買價"""
    bid_volume: builtins.int
    """買量"""
    ask_price: builtins.float
    """賣價"""
    ask_volume: builtins.int
    """賣量"""
    open_price: builtins.float
    """開盤價"""
    high_price: builtins.float
    """最高價"""
    low_price: builtins.float
    """最低價"""
    close_price: builtins.float
    """收盤價"""
    total_volume: builtins.int
    """總成交量"""
    total_amount: builtins.float
    """總成交金額"""
    tick_count: builtins.int
    """TICK 計數"""
    def __init__(
        self,
        *,
        code: builtins.str = ...,
        symbol: builtins.str = ...,
        timestamp: builtins.int = ...,
        price: builtins.float = ...,
        volume: builtins.int = ...,
        bid_price: builtins.float = ...,
        bid_volume: builtins.int = ...,
        ask_price: builtins.float = ...,
        ask_volume: builtins.int = ...,
        open_price: builtins.float = ...,
        high_price: builtins.float = ...,
        low_price: builtins.float = ...,
        close_price: builtins.float = ...,
        total_volume: builtins.int = ...,
        total_amount: builtins.float = ...,
        tick_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ask_price", b"ask_price", "ask_volume", b"ask_volume", "bid_price", b"bid_price", "bid_volume", b"bid_volume", "close_price", b"close_price", "code", b"code", "high_price", b"high_price", "low_price", b"low_price", "open_price", b"open_price", "price", b"price", "symbol", b"symbol", "tick_count", b"tick_count", "timestamp", b"timestamp", "total_amount", b"total_amount", "total_volume", b"total_volume", "volume", b"volume"]) -> None: ...

global___StockTick = StockTick

@typing.final
class StockBidAsk(google.protobuf.message.Message):
    """股票買賣價量資料"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    SYMBOL_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    BID_PRICE_FIELD_NUMBER: builtins.int
    BID_VOLUME_FIELD_NUMBER: builtins.int
    DIFF_BID_VOL_FIELD_NUMBER: builtins.int
    ASK_PRICE_FIELD_NUMBER: builtins.int
    ASK_VOLUME_FIELD_NUMBER: builtins.int
    DIFF_ASK_VOL_FIELD_NUMBER: builtins.int
    SUSPEND_FIELD_NUMBER: builtins.int
    SIMTRADE_FIELD_NUMBER: builtins.int
    code: builtins.str
    """商品代碼（如：2330）"""
    symbol: builtins.str
    """商品符號（如：2330）"""
    timestamp: builtins.int
    """時間戳（納秒）"""
    suspend: builtins.bool
    """暫停交易"""
    simtrade: builtins.bool
    """試撮"""
    @property
    def bid_price(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """買價陣列（5檔）"""

    @property
    def bid_volume(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """買量陣列（5檔）"""

    @property
    def diff_bid_vol(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """買價增減量陣列（5檔）"""

    @property
    def ask_price(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """賣價陣列（5檔）"""

    @property
    def ask_volume(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """賣量陣列（5檔）"""

    @property
    def diff_ask_vol(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """賣價增減量陣列（5檔）"""

    def __init__(
        self,
        *,
        code: builtins.str = ...,
        symbol: builtins.str = ...,
        timestamp: builtins.int = ...,
        bid_price: collections.abc.Iterable[builtins.float] | None = ...,
        bid_volume: collections.abc.Iterable[builtins.int] | None = ...,
        diff_bid_vol: collections.abc.Iterable[builtins.int] | None = ...,
        ask_price: collections.abc.Iterable[builtins.float] | None = ...,
        ask_volume: collections.abc.Iterable[builtins.int] | None = ...,
        diff_ask_vol: collections.abc.Iterable[builtins.int] | None = ...,
        suspend: builtins.bool = ...,
        simtrade: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ask_price", b"ask_price", "ask_volume", b"ask_volume", "bid_price", b"bid_price", "bid_volume", b"bid_volume", "code", b"code", "diff_ask_vol", b"diff_ask_vol", "diff_bid_vol", b"diff_bid_vol", "simtrade", b"simtrade", "suspend", b"suspend", "symbol", b"symbol", "timestamp", b"timestamp"]) -> None: ...

global___StockBidAsk = StockBidAsk

@typing.final
class FutureTick(google.protobuf.message.Message):
    """期貨 TICK 資料"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    SYMBOL_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    VOLUME_FIELD_NUMBER: builtins.int
    UNDERLYING_PRICE_FIELD_NUMBER: builtins.int
    BID_SIDE_TOTAL_VOL_FIELD_NUMBER: builtins.int
    ASK_SIDE_TOTAL_VOL_FIELD_NUMBER: builtins.int
    AVG_PRICE_FIELD_NUMBER: builtins.int
    OPEN_PRICE_FIELD_NUMBER: builtins.int
    HIGH_PRICE_FIELD_NUMBER: builtins.int
    LOW_PRICE_FIELD_NUMBER: builtins.int
    TOTAL_AMOUNT_FIELD_NUMBER: builtins.int
    TOTAL_VOLUME_FIELD_NUMBER: builtins.int
    TICK_TYPE_FIELD_NUMBER: builtins.int
    CHG_TYPE_FIELD_NUMBER: builtins.int
    PRICE_CHG_FIELD_NUMBER: builtins.int
    PCT_CHG_FIELD_NUMBER: builtins.int
    SIMTRADE_FIELD_NUMBER: builtins.int
    code: builtins.str
    """商品代碼（如：TXFG4）"""
    symbol: builtins.str
    """商品符號（如：TXF202402）"""
    timestamp: builtins.int
    """TICK 時間戳（納秒）"""
    price: builtins.float
    """成交價"""
    volume: builtins.int
    """成交量（口）"""
    underlying_price: builtins.float
    """標的物價格"""
    bid_side_total_vol: builtins.int
    """買盤成交總量（口）"""
    ask_side_total_vol: builtins.int
    """賣盤成交總量（口）"""
    avg_price: builtins.float
    """均價"""
    open_price: builtins.float
    """開盤價"""
    high_price: builtins.float
    """最高價"""
    low_price: builtins.float
    """最低價"""
    total_amount: builtins.float
    """總成交額"""
    total_volume: builtins.int
    """總成交量（口）"""
    tick_type: mizar_common_pb2.TickType.ValueType
    """內外盤別"""
    chg_type: mizar_common_pb2.ChangeType.ValueType
    """漲跌註記"""
    price_chg: builtins.float
    """漲跌"""
    pct_chg: builtins.float
    """漲跌幅（%）"""
    simtrade: mizar_common_pb2.SimTradeType.ValueType
    """試撮狀態"""
    def __init__(
        self,
        *,
        code: builtins.str = ...,
        symbol: builtins.str = ...,
        timestamp: builtins.int = ...,
        price: builtins.float = ...,
        volume: builtins.int = ...,
        underlying_price: builtins.float = ...,
        bid_side_total_vol: builtins.int = ...,
        ask_side_total_vol: builtins.int = ...,
        avg_price: builtins.float = ...,
        open_price: builtins.float = ...,
        high_price: builtins.float = ...,
        low_price: builtins.float = ...,
        total_amount: builtins.float = ...,
        total_volume: builtins.int = ...,
        tick_type: mizar_common_pb2.TickType.ValueType = ...,
        chg_type: mizar_common_pb2.ChangeType.ValueType = ...,
        price_chg: builtins.float = ...,
        pct_chg: builtins.float = ...,
        simtrade: mizar_common_pb2.SimTradeType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ask_side_total_vol", b"ask_side_total_vol", "avg_price", b"avg_price", "bid_side_total_vol", b"bid_side_total_vol", "chg_type", b"chg_type", "code", b"code", "high_price", b"high_price", "low_price", b"low_price", "open_price", b"open_price", "pct_chg", b"pct_chg", "price", b"price", "price_chg", b"price_chg", "simtrade", b"simtrade", "symbol", b"symbol", "tick_type", b"tick_type", "timestamp", b"timestamp", "total_amount", b"total_amount", "total_volume", b"total_volume", "underlying_price", b"underlying_price", "volume", b"volume"]) -> None: ...

global___FutureTick = FutureTick

@typing.final
class FutureBidAsk(google.protobuf.message.Message):
    """期貨買賣價量資料"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    SYMBOL_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    BID_TOTAL_VOL_FIELD_NUMBER: builtins.int
    ASK_TOTAL_VOL_FIELD_NUMBER: builtins.int
    BID_PRICE_FIELD_NUMBER: builtins.int
    BID_VOLUME_FIELD_NUMBER: builtins.int
    DIFF_BID_VOL_FIELD_NUMBER: builtins.int
    ASK_PRICE_FIELD_NUMBER: builtins.int
    ASK_VOLUME_FIELD_NUMBER: builtins.int
    DIFF_ASK_VOL_FIELD_NUMBER: builtins.int
    FIRST_DERIVED_BID_PRICE_FIELD_NUMBER: builtins.int
    FIRST_DERIVED_BID_VOL_FIELD_NUMBER: builtins.int
    FIRST_DERIVED_ASK_PRICE_FIELD_NUMBER: builtins.int
    FIRST_DERIVED_ASK_VOL_FIELD_NUMBER: builtins.int
    UNDERLYING_PRICE_FIELD_NUMBER: builtins.int
    SIMTRADE_FIELD_NUMBER: builtins.int
    code: builtins.str
    """商品代碼（如：TXFG4）"""
    symbol: builtins.str
    """商品符號（如：TXF202402）"""
    timestamp: builtins.int
    """時間戳（納秒）"""
    bid_total_vol: builtins.int
    """買盤總量（口）"""
    ask_total_vol: builtins.int
    """賣盤總量（口）"""
    first_derived_bid_price: builtins.float
    """衍生一檔委買價"""
    first_derived_bid_vol: builtins.int
    """衍生一檔委買量"""
    first_derived_ask_price: builtins.float
    """衍生一檔委賣價"""
    first_derived_ask_vol: builtins.int
    """衍生一檔委賣量"""
    underlying_price: builtins.float
    """標的物價格"""
    simtrade: mizar_common_pb2.SimTradeType.ValueType
    """試撮狀態"""
    @property
    def bid_price(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """買價陣列（5檔）"""

    @property
    def bid_volume(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """買量陣列（5檔）"""

    @property
    def diff_bid_vol(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """買價增減量陣列（5檔）"""

    @property
    def ask_price(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """賣價陣列（5檔）"""

    @property
    def ask_volume(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """賣量陣列（5檔）"""

    @property
    def diff_ask_vol(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """賣價增減量陣列（5檔）"""

    def __init__(
        self,
        *,
        code: builtins.str = ...,
        symbol: builtins.str = ...,
        timestamp: builtins.int = ...,
        bid_total_vol: builtins.int = ...,
        ask_total_vol: builtins.int = ...,
        bid_price: collections.abc.Iterable[builtins.float] | None = ...,
        bid_volume: collections.abc.Iterable[builtins.int] | None = ...,
        diff_bid_vol: collections.abc.Iterable[builtins.int] | None = ...,
        ask_price: collections.abc.Iterable[builtins.float] | None = ...,
        ask_volume: collections.abc.Iterable[builtins.int] | None = ...,
        diff_ask_vol: collections.abc.Iterable[builtins.int] | None = ...,
        first_derived_bid_price: builtins.float = ...,
        first_derived_bid_vol: builtins.int = ...,
        first_derived_ask_price: builtins.float = ...,
        first_derived_ask_vol: builtins.int = ...,
        underlying_price: builtins.float = ...,
        simtrade: mizar_common_pb2.SimTradeType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ask_price", b"ask_price", "ask_total_vol", b"ask_total_vol", "ask_volume", b"ask_volume", "bid_price", b"bid_price", "bid_total_vol", b"bid_total_vol", "bid_volume", b"bid_volume", "code", b"code", "diff_ask_vol", b"diff_ask_vol", "diff_bid_vol", b"diff_bid_vol", "first_derived_ask_price", b"first_derived_ask_price", "first_derived_ask_vol", b"first_derived_ask_vol", "first_derived_bid_price", b"first_derived_bid_price", "first_derived_bid_vol", b"first_derived_bid_vol", "simtrade", b"simtrade", "symbol", b"symbol", "timestamp", b"timestamp", "underlying_price", b"underlying_price"]) -> None: ...

global___FutureBidAsk = FutureBidAsk
